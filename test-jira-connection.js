#!/usr/bin/env node

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Jira...\n');
console.log('‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç .env —Ñ–∞–π–ª!');
console.log('   –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Jira —Ç–µ–ø–µ—Ä—å —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ —á–µ—Ä–µ–∑ popup –Ω–∞—Å—Ç—Ä–æ–µ–∫.\n');

console.log('üìã –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
console.log('   2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"');
console.log('   3. –í–≤–µ–¥–∏—Ç–µ URL Jira –∏ API —Ç–æ–∫–µ–Ω');
console.log('   4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
console.log('   5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É –∑–∞–¥–∞—á\n');

console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ popup!');

console.log('üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
console.log(`   URL: ${config.baseURL}`);
console.log(`   Username: ${config.username || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
console.log(`   Password: ${config.password ? '***' : '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
console.log(`   API Token: ${config.apiToken ? '***' : '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n`);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
if (!config.baseURL || config.baseURL === 'http://your-jira-instance.com') {
  console.log('‚ùå –û—à–∏–±–∫–∞: JIRA_BASE_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç placeholder –∑–Ω–∞—á–µ–Ω–∏–µ');
  console.log('   –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
  process.exit(1);
}

if (!config.username && !config.apiToken) {
  console.log('‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω—ã —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
  console.log('   –£–∫–∞–∂–∏—Ç–µ JIRA_USERNAME –∏ JIRA_PASSWORD –∏–ª–∏ JIRA_API_TOKEN');
  process.exit(1);
}

// –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
let auth;
if (config.apiToken) {
  auth = { Authorization: `Bearer ${config.apiToken}` };
} else {
  const credentials = Buffer.from(`${config.username}:${config.password}`).toString('base64');
  auth = { Authorization: `Basic ${credentials}` };
}

console.log('üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
axios({
  method: 'GET',
  url: `${config.baseURL}/rest/api/3/myself`,
  headers: {
    'Accept': 'application/json',
    ...auth
  },
  timeout: 10000
})
.then(response => {
  console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');
  console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${response.data.displayName}`);
  console.log(`   Email: ${response.data.emailAddress}`);
  console.log(`   –ê–∫—Ç–∏–≤–µ–Ω: ${response.data.active ? '–î–∞' : '–ù–µ—Ç'}`);
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –∑–∞–¥–∞—á
  console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –∑–∞–¥–∞—á...');
  return axios({
    method: 'POST',
    url: `${config.baseURL}/rest/api/2/search`,
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json',
      ...auth
    },
    data: {
      jql: 'project = "Platform Team" ',
      maxResults: 5,
      fields: ['summary', 'assignee', 'reporter', 'components', 'priority']
    }
  });
})
.then(response => {
  console.log(response.data);
  console.log('‚úÖ –ü–æ–∏—Å–∫ –∑–∞–¥–∞—á —Ä–∞–±–æ—Ç–∞–µ—Ç!');
  console.log(`   –ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á: ${response.data.total}`);
  console.log(`   –ú–∞–∫—Å–∏–º—É–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${response.data.maxResults}`);
})
.catch(error => {
  console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:');
  
  if (error.code === 'ENOTFOUND') {
    console.log('   –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Jira.');
  } else if (error.response) {
    const { status, statusText } = error.response;
    console.log(`   HTTP ${status}: ${statusText}`);
    
    if (status === 401) {
      console.log('   –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å –∏–ª–∏ API —Ç–æ–∫–µ–Ω.');
    } else if (status === 403) {
      console.log('   –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Jira.');
    } else if (status === 404) {
      console.log('   API endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ—Ä—Å–∏—é Jira.');
    }
  } else if (error.code === 'ECONNREFUSED') {
    console.log('   –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—Ä—Ç –∏ firewall.');
  } else if (error.code === 'ETIMEDOUT') {
    console.log('   –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç—å.');
  } else {
    console.log(`   ${error.message}`);
  }
  
  console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
  console.log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å URL –≤ JIRA_BASE_URL');
  console.log('   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Jira —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω');
  console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
  console.log('   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Jira');
  
  process.exit(1);
});
